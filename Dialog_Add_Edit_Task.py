# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Sun Jul 12 12:14:41 2020
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

"""

Must Do:

1. Reference to Frame_Tasklist frame. = I think this is not needed anymore.
2. Getter and setter methods to pass data from Frame_Tasklist frame. = I think this is not needed anymore. No, this is still needed and DONE!!
3. Put timestamp in Date boxes like in making an entry or marking entry as done. = Done!!
4. Change 24-hour format to 12-hour format in timestamp values. = DONE!
5. Change sizes of the date boxes. = DONE!
6. Focus on the Change Task operation.

"""

from datetime import datetime

class Dialog_Add_Edit_Task(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Dialog_Add_Edit_Task.__init__
        kwds["style"] = kwds.get("style", 0)
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((515, 315))
        self.text_ctrl_taskdescription = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_datecreated = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_datedone = wx.TextCtrl(self, wx.ID_ANY, "")
        self.checkbox_done = wx.CheckBox(self, wx.ID_ANY, "Done")
        self.button_ok = wx.Button(self, wx.ID_ANY, "Ok")
        self.button_cancel = wx.Button(self, wx.ID_ANY, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.button_ok_click, self.button_ok)
        self.Bind(wx.EVT_BUTTON, self.button_cancel_click, self.button_cancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Dialog_Add_Edit_Task.__set_properties
        self.SetTitle("Operation")
        self.SetSize((515, 315))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Dialog_Add_Edit_Task.__do_layout
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.WrapSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(2, 2, 0, 0)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        label_operation = wx.StaticText(self, wx.ID_ANY, "label_1adsfasfasfasdfadsadfs")
        
        # Get a reference for this title statictext widget.
        
        self.label_operation = label_operation
        label_operation.SetFont(wx.Font(20, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_5.Add(label_operation, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        label_taskdescription = wx.StaticText(self, wx.ID_ANY, "Task Description")
        sizer_7.Add(label_taskdescription, 0, wx.ALL, 10)
        sizer_7.Add(self.text_ctrl_taskdescription, 1, wx.EXPAND, 0)
        sizer_5.Add(sizer_7, 1, wx.EXPAND, 0)
        label_datecreated = wx.StaticText(self, wx.ID_ANY, "Date Created")
                
        # Get a reference for the datecreated widget.
        
        self.label_datecreated = label_datecreated
        
        grid_sizer_1.Add(label_datecreated, 0, wx.ALIGN_RIGHT | wx.ALL, 10)
        grid_sizer_1.Add(self.text_ctrl_datecreated, 0, wx.ALL | wx.EXPAND, 10)
        label_datedone = wx.StaticText(self, wx.ID_ANY, "Date Done")
        
        # Get a reference for the label_datedone widget.
        
        self.label_datedone = label_datedone
        
        grid_sizer_1.Add(label_datedone, 0, wx.ALIGN_RIGHT | wx.ALL, 10)
        grid_sizer_1.Add(self.text_ctrl_datedone, 0, wx.ALL | wx.EXPAND, 10)
        sizer_5.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_5.Add(self.checkbox_done, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        label_status = wx.StaticText(self, wx.ID_ANY, "label_1")
        
        # Get a reference to the status statictext widget.
        
        self.label_status = label_status
        label_status.SetFont(wx.Font(13, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_5.Add(label_status, 0, wx.ALIGN_LEFT | wx.ALL, 5)
        sizer_6.Add(self.button_ok, 0, 0, 0)
        sizer_6.Add(self.button_cancel, 0, 0, 0)
        sizer_5.Add(sizer_6, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer_5)
        self.Layout()
        # end wxGlade

    def button_ok_click(self, event):  # wxGlade: Dialog_Add_Edit_Task.<event_handler>

        if(self.text_ctrl_taskdescription.GetLineLength(0) > 0):
            self.operation_applied = True
            self.Close()
        else:
            self.label_status.SetLabel(">>> Task Description is empty. <<<")

    def button_cancel_click(self, event):  # wxGlade: Dialog_Add_Edit_Task.<event_handler>
        
        self.operation_applied = False
        self.Close()

    def set_operation(self, given):
        self.operation = given
        self.label_operation.SetLabel(given)
        
        """
        Make sure to clear the current text value of the status text widget to make it look better.
        If a previous status is present the user will become confused.
        """
        
        self.label_status.SetLabel("")
        
        """
        Do the necessary actions to hide or show certain widgets depending on the given operation.
        """

        self.text_ctrl_datecreated.SetEditable(False)
        self.text_ctrl_datedone.SetEditable(False)

        if given == 'Add new task entry':
            self.label_datedone.Hide()
            self.text_ctrl_datedone.Hide()
            self.checkbox_done.Hide()
            
            """
            datetime will let me get the current timestamp from the running system and use it
            to make the date and time values for the date created box. I will use the same 
            routine for the date done box.
            
            I need to make the time in 12-hour format because it is easier to understand than the
            24-hour format.
            """
            
            """
            
            I am showing the date in a user-friendly format and it might not be practical to store
            it in the save file. Some information might get lost if I do that like the seconds or
            other intervals. I will use a separate attribute to store what the datetime.today() has 
            and that will be stored in the text file.
            
            """        
            
            self.dateToday = datetime.today()
            strDateToday = self.dateToday.strftime("%m-%d-%Y %I:%M %p")
            self.text_ctrl_datecreated.ChangeValue(strDateToday)
            
            
        elif given == 'Change task entry':
            self.label_datecreated.Show()
            self.text_ctrl_datecreated.Show()
            self.label_datedone.Show()
            self.text_ctrl_datedone.Show()            
            self.checkbox_done.Show()
            
    # Setter method to assign existing values from selected row in the required boxes.        
            
    def setSelectedEntry(self, givenSelectedRow, givenTaskDescription, givenStatus, givenDateCreated, givenDateDone, givenHiddenDateCreated, givenHiddenDateDone):
        
        self.taskDescription = givenTaskDescription
        self.status = givenStatus
        self.dateCreated = givenDateCreated
        self.dateDone = givenDateDone
        self.hiddenDateCreated = givenHiddenDateCreated
        self.hiddenDateDone = givenHiddenDateDone
        self.selectedRow = givenSelectedRow
        
        # Put the values in the boxes.
        
        self.text_ctrl_datecreated.ChangeValue(self.dateCreated)
        self.text_ctrl_datedone.ChangeValue(self.dateDone)
        self.text_ctrl_taskdescription.ChangeValue(self.taskDescription)
        
     # Rather than put many logic in the close button, this method will be called by the caller to get the updated values of the TextEntry(s).   
        
    def reflectChanges(self):
         
         self.taskDescription = self.text_ctrl_taskdescription.GetLineText(0)
         
         # More attributes will be added in this method when the done checkbox is checked.
        
# end of class Dialog_Add_Edit_Task
